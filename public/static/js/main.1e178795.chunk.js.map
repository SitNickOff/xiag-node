{"version":3,"sources":["actions/questions.js","reducers/questions.js","actions/user.js","reducers/user.js","reducers/index.js","middleware/local-storage.js","store/index.js","Components/ToolbarLink/index.jsx","Components/Toolbar/index.jsx","Components/Header/index.jsx","Components/Content/index.jsx","Components/QuestionList.jsx/template.jsx","Components/QuestionList.jsx/index.jsx","Pages/IndexPage.jsx","Components/QuestionView.jsx/ResponseForm.jsx","Components/QuestionView.jsx/PollResult.jsx","Components/QuestionView.jsx/template.jsx","Components/QuestionView.jsx/index.jsx","Pages/QuestionVeiwPage.jsx","Components/QuestionEdit/template.jsx","Components/QuestionEdit/index.jsx","Pages/QuestionEditPage.jsx","Pages/NotFound.jsx","Components/Page/index.jsx","App.js","serviceWorker.js","index.js"],"names":["QUESTION_CREATE","QUESTION_UPDATE","QUESTIONS_ADD_RESPONSE","initialState","_id","content","answers","author","respondentsAnswers","respondent","answer","reducer","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","objectSpread","question","map","quest","questionId","resp","USER_ADD","name","userName","combineReducers","questions","questionsReducer","user","userReducer","key","json","localStorage","getItem","JSON","parse","error","loadState","store","createStore","applyMiddleware","promise","thunk","next","result","stringify","getState","setItem","console","logger","ToolbarLink","_ref","children","rest","objectWithoutProperties","react_default","a","createElement","react_router_dom","assign","activeClassName","withStyles","theme","root","display","width","link","margin","classes","className","Components_ToolbarLink","to","href","target","rel","Header","props","Fragment","src","alt","Components_Toolbar","Content","classnames","QuestionsList","history","style","marginBottom","marginRight","onClick","push","index","justifyContent","QuestionListContainer","connect","dispatch","QuestionListTemplate","withRouter","IndexPage","QuestionList_jsx","ResponseForm","_this","isMine","handleChangeResponden","event","setState","value","handleSelectAnswer","handleSendResponse","userAdd","addResponse","log","_this2","this","onChange","placeholder","flexDirection","id","React","Component","PollResult","marginTop","rAnswer","background","aIndex","QuestionView","_this$props","goBack","find","resA","QuestionView_jsx_ResponseForm","QuestionView_jsx_PollResult","QuestionViewContainer","match","params","QuestionAddResponse","QuestionViewTemplate","QuestionViewPage","QuestionView_jsx","EditForm","handleChangeContent","handleAddAnswer","handleChangeAnswer","i","addQuestionChanges","validate","forEach","questionCreate","questionUpdate","QuestionEditContainer","QuestionEditTemplate","QuestionEditPage","QuestionEdit","NotFound","Page","Components_Header","Components_Content","react_router","exact","path","component","new","App","Components_Page","Boolean","window","location","hostname","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e178795.chunk.js","sourcesContent":["export const QUESTION_CREATE = 'QUESTION_CREATE';\r\n\r\nexport function questionCreate(question) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: QUESTION_CREATE,\r\n            question\r\n        });\r\n    }\r\n}\r\n\r\nexport const QUESTION_UPDATE = 'QUESTION_UPDATE';\r\n\r\nexport function questionUpdate(question) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: QUESTION_UPDATE,\r\n            question\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const QUESTIONS_ADD_RESPONSE = 'QUESTIONS_ADD_RESPONSE';\r\n\r\nexport function QuestionAddResponse(questionId, resp) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: QUESTIONS_ADD_RESPONSE,\r\n            questionId,\r\n            resp\r\n        });\r\n    }\r\n}","import {\r\n    QUESTIONS_ADD_RESPONSE, QUESTION_CREATE, QUESTION_UPDATE\r\n} from '../actions';\r\n\r\nconst initialState = [\r\n    {\r\n        _id: 1,\r\n        content: 'Вы умный?',\r\n        answers: ['Да', 'Нет'],\r\n        author: 'Ситников А.',\r\n        respondentsAnswers: [\r\n            {\r\n                respondent: 'Ситников А.',\r\n                answer: 'Да'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        _id: 2,\r\n        content: 'На сколько Вы красивый?',\r\n        answers: ['Самый красивый', 'Очень красивый', 'Симпатичный'],\r\n        author: 'Ситников А.',\r\n        respondentsAnswers: []\r\n    }\r\n];\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case QUESTION_CREATE:\r\n            return [\r\n                ...state,\r\n                {\r\n                    ...action.question, \r\n                    _id: state.length+1\r\n                }\r\n            ];\r\n\r\n        case QUESTION_UPDATE:\r\n            return state.map(question=>{\r\n                if (question._id===action.question._id)\r\n                    return action.question;\r\n\r\n                return question;\r\n            })\r\n\r\n        case QUESTIONS_ADD_RESPONSE:            \r\n            return state.map(quest=>{\r\n                if (quest._id===action.questionId) {\r\n                    return{\r\n                        ...quest,\r\n                        respondentsAnswers: [...quest.respondentsAnswers, action.resp]\r\n                    }\r\n                }\r\n\r\n                return quest;\r\n            });\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","export const USER_ADD = 'USER_ADD';\r\n\r\nexport function userAdd(userName) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: USER_ADD,\r\n            userName\r\n        });\r\n    }\r\n}\r\n","import { USER_ADD } from \"../actions/user\";\r\n\r\nconst initialState = {\r\n    name: ''\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_ADD:\r\n            return {\r\n                ...state,\r\n                name: action.userName\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport {default as questionsReducer} from './questions';\r\nimport {default as userReducer} from './user';\r\n\r\nconst reducer = combineReducers({\r\n    questions: questionsReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default reducer;","export function loadState(key = 'state') {\r\n    try {\r\n        let json = localStorage.getItem(key);\r\n\r\n        if (json===null) {\r\n            return undefined;\r\n        } else {\r\n            return JSON.parse(json);\r\n        }\r\n    } catch (error) {\r\n        return undefined;    \r\n    }\r\n}\r\n\r\nexport default key => store => next => action => {\r\n    let result = next(action);\r\n\r\n    try {\r\n        let json = JSON.stringify(key?store.getState()[key]:store.getState());\r\n        localStorage.setItem(key || 'state', json);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return result;\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport promise from 'redux-promise';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport reducer from '../reducers';\r\n\r\nimport localStorage, {loadState} from '../middleware/local-storage';\r\n\r\nlet initialState = {};\r\n\r\nlet store_var;\r\n\r\ninitialState = loadState();\r\nstore_var = createStore(reducer, initialState, applyMiddleware(promise, thunk, localStorage(), logger));\r\n\r\nconst store = store_var;\r\n\r\nexport default store;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction ToolbarLink({ children, ...rest }) {\r\n    return (\r\n        <NavLink activeClassName=\"button--active\" {...rest}>{children}</NavLink>\r\n    );\r\n}\r\n\r\nexport default ToolbarLink;","import React from 'react';\r\nimport ToolbarLink from '../ToolbarLink';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      width: 360,\r\n    },\r\n    link: {\r\n        margin: '0 8px'\r\n    }\r\n});\r\n\r\nconst Toolbar = ({classes}) => {\r\n    return (\r\n        <nav className={classes.root}>\r\n            <ToolbarLink to=\"/\" className=\"mdc-tab\">Poll</ToolbarLink>\r\n            \r\n            <a className = {classes.link} href='https://test-task.xiag.ch/fullstack-developer.html' target='_blank' rel=\"noopener noreferrer\">\r\n                Task\r\n            </a>                    \r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Toolbar);","import React from 'react';\r\n\r\nimport Toolbar from '../Toolbar';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page__header\">\r\n                <div className=\"page__logo\">\r\n                    <a href=\"https://www.xiag.ch\" target='_blank' rel='noopener noreferrer'>\r\n                        <img src=\"https://test-task.xiag.ch/images/page-logo.png\" alt=\"XIAG AG\"/>\r\n                    </a>\r\n                </div> \r\n                <Toolbar />               \r\n            </div>            \r\n            <div className=\"page__image\">\r\n                <div className=\"page__task-title\">\r\n                    Poll website task\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport classnames from 'classnames'\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <div className={classnames('page__content', 'page__content--padding')}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport ToolbarLink from '../ToolbarLink';\r\n\r\nconst QuestionsList = ({questions, history}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{display: 'flex', marginBottom: 16}}>\r\n                <h2 style={{marginRight: 'auto'}}>Question List</h2>\r\n                <div className=\"ex2-question__submit\">\r\n                    <button className=\"btn\" onClick={()=>history.push('/poll/create')} >Add Question</button>\r\n                </div>\r\n            </div>\r\n\r\n            <table className=\"ex2-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Number</th>\r\n                        <th>Question</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {questions.map((question, index)=>\r\n                        <tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td>{question.content}</td>\r\n                            <td style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <ToolbarLink to={`/poll/${question._id}`} >View</ToolbarLink> \r\n                                <ToolbarLink to={`/poll/${question._id}/edit`} >Edit</ToolbarLink>\r\n                                <ToolbarLink to={`/poll/${question._id}/delete`} >Delete</ToolbarLink>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                \r\n                </tbody>\r\n            </table>\r\n\r\n            \r\n        </React.Fragment>\r\n        \r\n    );\r\n}\r\n\r\nexport default QuestionsList;","import { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport QuestionListTemplate from './template';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        questions: state.questions,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        //productsAmountTotalRent: (cartProducts, weeksQuantity) => cartProductsAmountTotalRent(cartProducts, weeksQuantity),\r\n    };\r\n}\r\n\r\nconst QuestionListContainer = connect(mapStateToProps, mapDispatchToProps)(QuestionListTemplate)\r\n\r\nexport default withRouter(QuestionListContainer);","import React from 'react';\r\n\r\nimport QuestionList from '../Components/QuestionList.jsx';\r\n\r\nconst IndexPage = (props) => {\r\n    return (\r\n        <div className='poll'>\r\n            <QuestionList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndexPage;","import React from 'react';\r\n\r\nclass ResponseForm extends React.Component{\r\n\r\n    state = {\r\n        respondent: this.props.user.name,\r\n        answer: '',\r\n        isMine: true\r\n    };\r\n\r\n    handleChangeResponden = event => {\r\n        this.setState({ \r\n            respondent: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSelectAnswer = event => {\r\n        this.setState({answer:event.target.value});\r\n    }\r\n    \r\n    handleSendResponse = () => {\r\n        if (this.state.respondent!==''&&this.state.answer!=='') {\r\n            this.props.userAdd(this.state.respondent);\r\n            this.props.addResponse(this.props.question._id, this.state);\r\n        } else \r\n            console.log('alert: fill all fields');\r\n    }\r\n\r\n    render() {        \r\n        const {question} = this.props;\r\n        return (\r\n            <div className=\"ex2-question\">\r\n                <div className=\"ex2-question__label\">\r\n                    Your name:\r\n                </div>\r\n                <div className=\"ex2-question__input\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"input-text\" \r\n                        value={this.state.respondent} \r\n                        onChange={this.handleChangeResponden}\r\n                        placeholder={'insert your name'}\r\n                    />\r\n                </div>\r\n                <div className=\"ex2-question__answer\" style={{display: 'flex', flexDirection: 'column'}}>\r\n                    {question.answers.map((answer, id) =>\r\n                        <label key={id}>\r\n                            <input type=\"radio\" name=\"do-we-go\" value={answer} onChange={this.handleSelectAnswer}/>\r\n                            {answer}\r\n                        </label>\r\n                    )}\r\n                </div>\r\n                <div style={{display: 'flex'}}>\r\n                    <div className=\"ex2-question__submit\">\r\n                        <input type=\"submit\" className=\"btn\" value=\"Submit\" onClick={this.handleSendResponse}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResponseForm;\r\n","import React from 'react';\r\n\r\nconst PollResult = ({question, user}) => {\r\n    return (\r\n        <div>\r\n            <h3>Results</h3>\r\n            <table className=\"ex2-table\" style={{marginTop: 16}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        {question.answers.map((answer, index)=>\r\n                            <th key={index}>{answer}</th>    \r\n                        )}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {question.respondentsAnswers.map((rAnswer, index) => \r\n                        <tr key={index} style={{background: rAnswer.isMine?'rgb(248, 155, 28, .2)':'inherit'}}>\r\n                            <td>{rAnswer.respondent}</td>\r\n                            {question.answers.map((answer, aIndex)=>\r\n                                <td key={aIndex}>{answer===rAnswer.answer?'X':''}</td>    \r\n                            )}\r\n                        </tr>  \r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PollResult;","import React from 'react';\r\nimport ResponseForm from './ResponseForm';\r\nimport PollResult from './PollResult';\r\n\r\nclass QuestionView extends React.Component {    \r\n    render() {\r\n        const {question, history, addResponse, userAdd, user} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{display: 'flex'}}>\r\n                    <h2 style={{marginRight: 'auto'}}>{question.content}</h2>\r\n                    <div className=\"ex2-question__submit\">\r\n                        <button className=\"btn\" onClick={history.goBack}>Back</button>\r\n                    </div>\r\n                </div>\r\n                {question.respondentsAnswers.find(resA=>resA.isMine)===undefined&&\r\n                    <ResponseForm question={question} user={user} addResponse = {addResponse} userAdd={userAdd} />\r\n                }\r\n                <PollResult question={question} user={user}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionView;","import { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport QuestionViewTemplate from './template';\r\n\r\nimport { QuestionAddResponse } from '../../actions'\r\nimport { userAdd } from '../../actions/user';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n        question: state.questions.find(question=>+question._id===+props.match.params.id),\r\n        user: state.user\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addResponse: (questionId, resp) => dispatch(QuestionAddResponse(questionId, resp)),\r\n        userAdd: (userName) => dispatch(userAdd(userName))\r\n    };\r\n}\r\n\r\nconst QuestionViewContainer = connect(mapStateToProps, mapDispatchToProps)(QuestionViewTemplate)\r\n\r\nexport default withRouter(QuestionViewContainer);","import React from 'react';\r\n\r\nimport QuestionView from '../Components/QuestionView.jsx';\r\n\r\nconst QuestionViewPage = () => {\r\n    return (\r\n        <div className='poll'>\r\n            <QuestionView />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default QuestionViewPage;","import React from 'react';\r\nimport classes from 'classnames'\r\n\r\nclass EditForm extends React.Component {\r\n    state = {\r\n        _id: this.props.question?this.props.question._id: 0,\r\n        content: this.props.question?this.props.question.content:'',\r\n        answers: this.props.question?this.props.question.answers:['',''],\r\n        respondentsAnswers:this.props.question?this.props.question.respondentsAnswers:[]\r\n    }\r\n\r\n    handleChangeContent = event => {\r\n        this.setState({ content: event.target.value });\r\n    };\r\n\r\n    handleAddAnswer = () => {\r\n        this.setState({answers: [...this.state.answers, '']})\r\n    }\r\n\r\n    handleChangeAnswer = index => event => {\r\n        this.setState({ \r\n            answers: this.state.answers.map((a, i)=>{\r\n                if (i===index)\r\n                    return event.target.value;\r\n                \r\n                return a;                \r\n            })\r\n        });\r\n    };\r\n\r\n    addQuestionChanges = () => {\r\n        let validate = true;\r\n\r\n        if (this.state.content==='') validate = false;\r\n\r\n        this.state.answers.forEach(answer => {\r\n            if (answer==='') validate=false;\r\n        });\r\n\r\n        if (validate) {\r\n            if (this.state._id === 0) {\r\n                this.props.questionCreate(this.state);\r\n            } else {\r\n                this.props.questionUpdate(this.state);\r\n            }\r\n\r\n            this.props.history.push('/poll');\r\n\r\n        } else\r\n            console.log('alert: fill all fields');\r\n    }\r\n\r\n    render() {\r\n        const { history } = this.props;\r\n        const question = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{display: 'flex', marginBottom: 16}}>\r\n                    <h2 style={{marginRight: 'auto'}}>{question?'Edit Question': 'New Question'}</h2>\r\n                    <div className=\"ex2-question__submit\">\r\n                        <button className=\"btn\" onClick={history.goBack} >Back</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <table className=\"poll-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Question:</th>\r\n                            <th>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={question?question.content:''} \r\n                                    className=\"input-text\" \r\n                                    placeholder='Insert question'\r\n                                    onChange = {this.handleChangeContent}\r\n                                />\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {question.answers.map((answer, index)=>\r\n                            <tr key={index}>\r\n                                <th>{`Answer ${index+1}:`}</th>\r\n                                <td>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={answer} \r\n                                        placeholder='Enter option' \r\n                                        onChange={this.handleChangeAnswer(index)} \r\n                                        className=\"input-text\" \r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    <tr>\r\n                        <td className=\"poll-table__plus\">\r\n                            <button className={classes(\"btn\",\"btn--plus\")} onClick={this.handleAddAnswer}>\r\n                                +\r\n                            </button>\r\n                        </td>\r\n                        <td> </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button className=\"btn btn--start\" onClick={this.addQuestionChanges}>\r\n                    Start\r\n                </button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditForm;","import { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport { questionCreate, questionUpdate} from '../../actions'\r\n\r\nimport QuestionEditTemplate from './template';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n        question: state.questions.find(question=>+question._id===+props.match.params.id),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        questionCreate: (question) => dispatch(questionCreate(question)),\r\n        questionUpdate: (question) => dispatch(questionUpdate(question)),\r\n    };\r\n}\r\n\r\nconst QuestionEditContainer = connect(mapStateToProps, mapDispatchToProps)(QuestionEditTemplate)\r\n\r\nexport default withRouter(QuestionEditContainer);","import React from 'react';\r\n\r\nimport EditForm from '../Components/QuestionEdit';\r\n\r\nconst QuestionEditPage = () => {\r\n    return (\r\n        <div className='poll'>\r\n            <EditForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionEditPage;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>NotFound</h1>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { \r\n    Route, \r\n    Switch, \r\n    //withRouter \r\n} from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport Content from '../Content';\r\nimport IndexPage from '../../Pages/IndexPage';\r\nimport QuestionViewPage from '../../Pages/QuestionVeiwPage';\r\nimport QuestionEditPage from '../../Pages/QuestionEditPage';\r\nimport NotFound from '../../Pages/NotFound';\r\n\r\n\r\n\r\nconst Page = (props) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <Header />\r\n            <Content>\r\n                <Switch>\r\n                    <Route exact path='/' component={IndexPage}/>\r\n                    <Route exact path='/poll' component={IndexPage} {...props}/>\r\n                    <Route exact path='/poll/create' component={QuestionEditPage} new={true} />\r\n                    <Route exact path='/poll/:id' component={QuestionViewPage} />   \r\n                    <Route exact path='/poll/:id/edit' component={QuestionEditPage} new={true} />                 \r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </Content>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default Page;","import React from 'react';\nimport './App.css';\n\nimport Page from './Components/Page';\n\n\n\nfunction App() {\n  return <Page />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}